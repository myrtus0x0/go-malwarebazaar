package malwarebazaar

import (
	"context"
	"net/http"
	"net/url"
	"strings"
)

const (
	baseURL      = "https://mb-api.abuse.ch/api/v1"
	apiKeyHeader = "API-KEY"
)

// Client A malwarebazaar client
type Client struct {
	apiKey string
}

func (c *Client) makeRequest(ctx context.Context, query string, urlValues *url.Values) (resp *http.Response, err error) {
	return makeRequest(ctx, query, urlValues, c.apiKey)
}

// makeRequest is a helper function managing some common logic to perform API requests
// If apiKey is not set, it will not be included as a header
func makeRequest(ctx context.Context, query string, urlValues *url.Values, apiKey string) (resp *http.Response, err error) {
	// Build body and request
	body := url.Values{}
	body.Add("query", query)
	for key, values := range *urlValues {
		for _, value := range values {
			body.Add(key, value)
		}
	}
	req, err := http.NewRequestWithContext(ctx, "POST", baseURL, strings.NewReader(body.Encode()))
	if err != nil {
		return nil, err
	}

	// Add headers
	req.Header.Add("Content-Type", "application/x-www-form-urlencoded")
	if apiKey != "" {
		req.Header.Add(apiKeyHeader, apiKey)
	}

	resp, err = http.DefaultClient.Do(req)
	if err != nil {
		return nil, err
	}

	return resp, err
}

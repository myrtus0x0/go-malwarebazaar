package malwarebazaar

import (
	"context"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"testing"
)

func TestDownload(t *testing.T) {
	d, err := Download(context.Background(), "094fd325049b8a9cf6d3e5ef2a6d4cc6a567d7d49c35f8bb8dd9e3c6acf3d78d")
	if err != nil {
		t.Error(err)
		return
	}

	fileBytes, err := ioutil.ReadAll(d)
	d.Close()
	if err != nil {
		t.Error(err)
		return
	}
	if len(fileBytes) == 0 {
		t.Errorf("did not download any data")
		return
	}

	// Check for a request that should fail
	d, err = Download(context.Background(), "invalid")
	if err == nil {
		t.Errorf("should have errored")
		return
	}

	// Try getting raw content
	d, err = Download(context.Background(), "094fd325049b8a9cf6d3e5ef2a6d4cc6a567d7d49c35f8bb8dd9e3c6acf3d78d")
	if err != nil {
		t.Error(err)
		return
	}

	// Try to get raw content
	rawContentReader, err := GetRawFile(d)
	if err != nil {
		t.Error(err)
		return
	}
	shaComputer := sha256.New()
	_, err = io.Copy(shaComputer, rawContentReader)
	if err != nil {
		t.Error(err)
		return
	}
	rawContentReader.Close()
	d.Close()
	if hash := fmt.Sprintf("%x", shaComputer.Sum(nil)); hash != "094fd325049b8a9cf6d3e5ef2a6d4cc6a567d7d49c35f8bb8dd9e3c6acf3d78d" {
		t.Errorf("Did not get correct raw file")
	}
}

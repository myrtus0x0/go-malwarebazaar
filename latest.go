package malwarebazaar

import (
	"context"
	"encoding/json"
	"fmt"
	"net/url"
)

// SelectorType is the type of recent samples to get from the QueryLatest function
type SelectorType string

// Selector Types
const (
	// Get samples from the last 60 minutes
	TimeSelect SelectorType = "time"
	// Get the last 100 samples
	CountSelect SelectorType = "100"
)

// QueryLatest Gets the latest samples from malware bazaar
// Set selector to TimeSelect to get the latest samples within the last 60 minutes.
// Set it to "CountSelect" to get the latest 100 samples
// It "retrieves a list of malware samples added to MalwareBazaar within the last 60 minutes"
func QueryLatest(ctx context.Context, selector SelectorType) ([]Entry, error) {
	values := url.Values{}
	values.Add("selector", string(selector))
	resp, err := makeRequest(ctx, "get_recent", &values, "")
	if err != nil {
		return nil, err
	}

	ret := APIResponse{}
	err = json.NewDecoder(resp.Body).Decode(&ret)
	if err != nil {
		return nil, err
	}

	if ret.QueryStatus != QueryStatusOK {
		return nil, fmt.Errorf(string(ret.QueryStatus))
	}

	return ret.Entries, nil
}
